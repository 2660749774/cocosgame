--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Scene
local Scene=cc.Node:create()
Scene:setName("Scene")

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 150, g = 200, b = 255})
panel:setBackGroundColorOpacity(0)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(116)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
panel:setAnchorPoint(0.5000, 0.5000)
panel:setPosition(320.0000, 568.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 640.0000, height = 1136.0000})
Scene:addChild(panel)

--Create popup_bg_4
local popup_bg_4 = cc.Sprite:create("ui/tetris/power/popup_bg.png")
popup_bg_4:setName("popup_bg_4")
popup_bg_4:setTag(51)
popup_bg_4:setCascadeColorEnabled(true)
popup_bg_4:setCascadeOpacityEnabled(true)
popup_bg_4:setPosition(320.0000, 644.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(popup_bg_4)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5669)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.6294)
layout:setSize({width = 640.0000, height = 715.0000})
layout:setTopMargin(134.5000)
layout:setBottomMargin(286.5000)
popup_bg_4:setBlendFunc({src = 1, dst = 771})
panel:addChild(popup_bg_4)

--Create game_pauseing_1
local game_pauseing_1 = cc.Sprite:create("ui/tetris/power/game_pauseing.png")
game_pauseing_1:setName("game_pauseing_1")
game_pauseing_1:setTag(76)
game_pauseing_1:setCascadeColorEnabled(true)
game_pauseing_1:setCascadeOpacityEnabled(true)
game_pauseing_1:setPosition(320.0000, 564.2578)
layout = ccui.LayoutComponent:bindLayoutComponent(game_pauseing_1)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.7892)
layout:setPercentWidth(0.2813)
layout:setPercentHeight(0.0699)
layout:setSize({width = 180.0000, height = 50.0000})
layout:setLeftMargin(230.0000)
layout:setRightMargin(230.0000)
layout:setTopMargin(125.7422)
layout:setBottomMargin(539.2578)
game_pauseing_1:setBlendFunc({src = 1, dst = 771})
popup_bg_4:addChild(game_pauseing_1)

--Create btn_continue
local btn_continue = ccui.Button:create()
btn_continue:ignoreContentAdaptWithSize(false)
btn_continue:loadTextureNormal("ui/tetris/power/game_continue.png",0)
btn_continue:loadTexturePressed("ui/tetris/power/game_continue.png",0)
btn_continue:loadTextureDisabled("ui/tetris/power/game_continue.png",0)
btn_continue:setTitleFontSize(14)
btn_continue:setTitleColor({r = 65, g = 65, b = 70})
btn_continue:setScale9Enabled(true)
btn_continue:setCapInsets({x = 15, y = 11, width = 262, height = 64})
btn_continue:setLayoutComponentEnabled(true)
btn_continue:setName("btn_continue")
btn_continue:setTag(80)
btn_continue:setCascadeColorEnabled(true)
btn_continue:setCascadeOpacityEnabled(true)
btn_continue:setPosition(320.0000, 454.4875)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_continue)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.6356)
layout:setPercentWidth(0.4563)
layout:setPercentHeight(0.1203)
layout:setSize({width = 292.0000, height = 86.0000})
layout:setLeftMargin(174.0000)
layout:setRightMargin(174.0000)
layout:setTopMargin(217.5125)
layout:setBottomMargin(411.4875)
popup_bg_4:addChild(btn_continue)

--Create btn_vol
local btn_vol = ccui.Button:create()
btn_vol:ignoreContentAdaptWithSize(false)
btn_vol:loadTextureNormal("ui/tetris/power/vol_on.png",0)
btn_vol:loadTexturePressed("ui/tetris/power/vol_on.png",0)
btn_vol:loadTextureDisabled("ui/tetris/power/vol_on.png",0)
btn_vol:setTitleFontSize(14)
btn_vol:setTitleColor({r = 65, g = 65, b = 70})
btn_vol:setScale9Enabled(true)
btn_vol:setCapInsets({x = 15, y = 11, width = 262, height = 64})
btn_vol:setLayoutComponentEnabled(true)
btn_vol:setName("btn_vol")
btn_vol:setTag(81)
btn_vol:setCascadeColorEnabled(true)
btn_vol:setCascadeOpacityEnabled(true)
btn_vol:setPosition(320.0000, 319.1565)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_vol)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.4464)
layout:setPercentWidth(0.4563)
layout:setPercentHeight(0.1203)
layout:setSize({width = 292.0000, height = 86.0000})
layout:setLeftMargin(174.0000)
layout:setRightMargin(174.0000)
layout:setTopMargin(352.8435)
layout:setBottomMargin(276.1565)
popup_bg_4:addChild(btn_vol)

--Create btn_endgame
local btn_endgame = ccui.Button:create()
btn_endgame:ignoreContentAdaptWithSize(false)
btn_endgame:loadTextureNormal("ui/tetris/power/game_end.png",0)
btn_endgame:loadTexturePressed("ui/tetris/power/game_end.png",0)
btn_endgame:loadTextureDisabled("ui/tetris/power/game_end.png",0)
btn_endgame:setTitleFontSize(14)
btn_endgame:setTitleColor({r = 65, g = 65, b = 70})
btn_endgame:setScale9Enabled(true)
btn_endgame:setCapInsets({x = 15, y = 11, width = 262, height = 64})
btn_endgame:setLayoutComponentEnabled(true)
btn_endgame:setName("btn_endgame")
btn_endgame:setTag(82)
btn_endgame:setCascadeColorEnabled(true)
btn_endgame:setCascadeOpacityEnabled(true)
btn_endgame:setPosition(320.0000, 182.9961)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_endgame)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.2559)
layout:setPercentWidth(0.4563)
layout:setPercentHeight(0.1203)
layout:setSize({width = 292.0000, height = 86.0000})
layout:setLeftMargin(174.0000)
layout:setRightMargin(174.0000)
layout:setTopMargin(489.0039)
layout:setBottomMargin(139.9961)
popup_bg_4:addChild(btn_endgame)

--Create btn_close
local btn_close = ccui.Button:create()
btn_close:ignoreContentAdaptWithSize(false)
btn_close:loadTextureNormal("ui/tetris/power/close.png",0)
btn_close:loadTexturePressed("ui/tetris/power/close.png",0)
btn_close:loadTextureDisabled("ui/tetris/power/close.png",0)
btn_close:setTitleFontSize(14)
btn_close:setTitleColor({r = 65, g = 65, b = 70})
btn_close:setScale9Enabled(true)
btn_close:setCapInsets({x = 15, y = 11, width = 35, height = 43})
btn_close:setLayoutComponentEnabled(true)
btn_close:setName("btn_close")
btn_close:setTag(414)
btn_close:setCascadeColorEnabled(true)
btn_close:setCascadeOpacityEnabled(true)
btn_close:setPosition(558.2432, 667.4741)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_close)
layout:setPositionPercentX(0.8723)
layout:setPositionPercentY(0.9335)
layout:setPercentWidth(0.1016)
layout:setPercentHeight(0.0909)
layout:setSize({width = 65.0000, height = 65.0000})
layout:setLeftMargin(525.7432)
layout:setRightMargin(49.2568)
layout:setTopMargin(15.0259)
layout:setBottomMargin(634.9741)
popup_bg_4:addChild(btn_close)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Scene
return result;
end

return Result

