--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor(cc.c3b(150, 200, 255))
panel:setBackGroundColorOpacity(102)
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(40)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
panel:setAnchorPoint(0.0000, 0.0000)
panel:setPosition(-5.0000, 13.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setPositionPercentX(-0.0250)
layout:setPositionPercentY(0.1625)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.6750)
layout:setSize(cc.size(200.0000, 54.0000))
layout:setLeftMargin(-5.0000)
layout:setRightMargin(5.0000)
layout:setTopMargin(13.0000)
layout:setBottomMargin(13.0000)
Layer:addChild(panel)

--Create BS13_3
local BS13_3 = cc.Sprite:create("BattleScene/BS13.png")
BS13_3:setName("BS13_3")
BS13_3:setTag(20)
BS13_3:setCascadeColorEnabled(true)
BS13_3:setCascadeOpacityEnabled(true)
BS13_3:setPosition(100.8405, 28.1993)
layout = ccui.LayoutComponent:bindLayoutComponent(BS13_3)
layout:setPositionPercentX(0.5042)
layout:setPositionPercentY(0.5222)
layout:setSize(cc.size(188.0000, 54.0000))
layout:setLeftMargin(6.8405)
layout:setRightMargin(5.1595)
layout:setTopMargin(-1.1993)
layout:setBottomMargin(1.1993)
panel:addChild(BS13_3)

--Create list_label
local list_label = ccui.Text:create()
list_label:ignoreContentAdaptWithSize(true)
list_label:setTextAreaSize(cc.size(0, 0))
list_label:setFontSize(24)
list_label:setString([[10000
]])
list_label:enableShadow(cc.c4b(110, 110, 110, 255), cc.size(2.0000, -2.0000), 0)
list_label:setLayoutComponentEnabled(true)
list_label:setName("list_label")
list_label:setTag(21)
list_label:setCascadeColorEnabled(true)
list_label:setCascadeOpacityEnabled(true)
list_label:setPosition(86.7519, 21.4262)
list_label:setColor(cc.c3b(50, 94, 213))
layout = ccui.LayoutComponent:bindLayoutComponent(list_label)
layout:setPositionPercentX(0.4338)
layout:setPositionPercentY(0.3968)
layout:setSize(cc.size(60.0000, 48.0000))
layout:setLeftMargin(56.7519)
layout:setRightMargin(83.2481)
layout:setTopMargin(8.5738)
layout:setBottomMargin(-2.5738)
panel:addChild(list_label)

--Create icon
local icon = cc.Sprite:create("Common/Cn16.png")
icon:setName("icon")
icon:setTag(36)
icon:setCascadeColorEnabled(true)
icon:setCascadeOpacityEnabled(true)
icon:setPosition(31.0000, 27.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(icon)
layout:setPositionPercentX(0.1550)
layout:setPositionPercentY(0.5000)
layout:setSize(cc.size(57.0000, 53.0000))
layout:setLeftMargin(2.5000)
layout:setRightMargin(140.5000)
layout:setTopMargin(0.5000)
layout:setBottomMargin(0.5000)
panel:addChild(icon)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

