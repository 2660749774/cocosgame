--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel
local panel = ccui.Layout:create()
panel:ignoreContentAdaptWithSize(false)
panel:setClippingEnabled(false)
panel:setBackGroundColorType(1)
panel:setBackGroundColor({r = 30, g = 144, b = 255})
panel:setBackGroundColorOpacity(126)
panel:setTouchEnabled(true);
panel:setLayoutComponentEnabled(true)
panel:setName("panel")
panel:setTag(34)
panel:setCascadeColorEnabled(true)
panel:setCascadeOpacityEnabled(true)
panel:setAnchorPoint(0.5000, 0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel)
layout:setSize({width = 640.0000, height = 80.0000})
layout:setLeftMargin(-320.0000)
layout:setRightMargin(-320.0000)
layout:setTopMargin(-40.0000)
layout:setBottomMargin(-40.0000)
Node:addChild(panel)

--Create lb_tips
local lb_tips = ccui.Text:create()
lb_tips:ignoreContentAdaptWithSize(true)
lb_tips:setTextAreaSize({width = 0, height = 0})
lb_tips:setFontSize(32)
lb_tips:setString([[Tips内容]])
lb_tips:setTextHorizontalAlignment(1)
lb_tips:setTextVerticalAlignment(1)
lb_tips:enableShadow({r = 0, g = 0, b = 0, a = 255}, {width = 1, height = -1}, 0)
lb_tips:setLayoutComponentEnabled(true)
lb_tips:setName("lb_tips")
lb_tips:setTag(35)
lb_tips:setCascadeColorEnabled(true)
lb_tips:setCascadeOpacityEnabled(true)
lb_tips:setPosition(320.0000, 40.0000)
lb_tips:setTextColor({r = 255, g = 165, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(lb_tips)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.1938)
layout:setPercentHeight(0.4625)
layout:setSize({width = 124.0000, height = 37.0000})
layout:setLeftMargin(258.0000)
layout:setRightMargin(258.0000)
layout:setTopMargin(21.5000)
layout:setBottomMargin(21.5000)
panel:addChild(lb_tips)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

